.yui-b
  .box#category_tips
    -if @post.contest
      = render :partial => "contest"
    -elsif @post.category
      = render :partial => "/categories/tips", :locals => {:category => @post.category}
    - else 
      = render :partial => "/categories/tips", :locals => {:category => nil}

  .box.alt
    %a.button.positive{:href => '#', :onclick => "tinyMCE.execCommand('mceCurblyAdvImage');return false;"}="Upload an image for your post".l
    
#yui-main
  .yui-b
    .box
      %h3
        =@post.category ? (:new_post_for_category.l :category => @post.category.name) : "New post".l

      = error_messages_for :post
      - form_for(:post, :url => user_posts_path, :html => {:class => "MainForm"}) do |f|			
        - unless @post.category || @post.contest 
          %label
            ="Category".l
            \:
          %select{:id=>"post_category_id", :name=>"post[category_id]"}
            -for category in Category.find(:all)
              %option{:value=>"#{category.id}"}= h(category.name)
        -else
          = f.hidden_field :category_id
          = f.hidden_field :contest_id

        %label
          ="Title".l
          %em="(required)".l
        = f.text_field :title

        %label
          ="Body Text".l
          %em="(required)".l
        = f.text_area :raw_post, :style => "width:100%;"

        %label
          ="Tags".l
          %em="(optional keywords describing this post, separated by commas)".l
        = text_field_tag 'tag_list', @post.tags.collect{|t| t.name}.join(", "), {:autocomplete => "off", :size => 35}
        .auto_complete#tag_list_auto_complete
          = auto_complete_field 'tag_list', {:url => { :controller => "tags", :action => 'auto_complete_for_tag_name'}, :tokens => [',', ' ']  }
        
        %label
          %a{:href=> "#", :onclick => "$('poll-ui').toggle(); return false;"}
            = "#{image_tag 'icons/poll.png', :plugin => 'community_engine' } " + "Add a poll".l
          %em="(optional)".l
        #poll-ui{:style => 'display:none'}=render :partial => 'polls/new'

        %label
          ="Save post as:".l
        = f.select(:published_as, [['Published', 'live'], ['Draft', 'draft']])
        
        %p
          = submit_tag "Save".l
        %p
          or 
          = link_to 'cancel and go back to my posts'.l, user_posts_path(@user)

  = observe_field  "post_category_id", {:url => {:controller => 'categories', :action => 'show_tips'}, :with => "id", :update => "category_tips", :complete => visual_effect(:highlight, "category_tips", :duration => 0.5)}

